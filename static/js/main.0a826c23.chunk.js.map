{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","id","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","inputForm","this","label","input","type","placeholder","pattern","title","required","onChange","submitBtn","Component","defaultProps","ContactItem","onDeleteContact","onClick","ContactList","contacts","contactList","map","Filter","App","filter","addNewContact","data","normilizedData","toLowerCase","dublicate","find","contact","newContact","uuidv4","alert","changeFilter","deleteContact","contactId","prevState","contactsStorage","localStorage","getItem","contactsStorageParsed","JSON","parse","prevProps","setItem","stringify","normalizedFilter","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a826c23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2b9rj\",\"input\":\"Filter_input__3lN0j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__iJb61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"ContactForm_inputForm__3o4-T\",\"label\":\"ContactForm_label__2JurP\",\"submitBtn\":\"ContactForm_submitBtn__3iO8k\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n        id: '',\n    };\n\n    handleInputChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n            id: '',\n        });\n    };\n\n    render() {\n        return (\n            <form className={styles.inputForm} onSubmit={this.handleSubmit}>\n                <label className={styles.label}>\n                    <span>Name</span>\n                    <input\n                        className={styles.input}\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        placeholder=\"i.e. James Bond\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={this.handleInputChange}\n                    />\n                </label>\n                <label className={styles.label}>\n                    Number\n                    <input\n                        className={styles.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        value={this.state.number}\n                        placeholder=\"i.e. 007-00-00\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.handleInputChange}\n                    />\n                </label>\n                <button className={styles.submitBtn} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nContactForm.defaultProps = {\n    value: '',\n};\n\nContactForm.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n    return (\n        <li key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <ul className={styles.contactList}>\n            {contacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    onDeleteContact={onDeleteContact}\n                    id={id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={styles.label}>\n            {' '}\n            Find contacts by name\n            <input\n                className={styles.input}\n                type=\"text\"\n                value={value}\n                placeholder=\"enter name\"\n                onChange={onChange}\n            ></input>\n        </label>\n    );\n};\n\nFilter.defaultProps = {\n    value: '',\n};\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles.css';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    addNewContact = data => {\n        const normilizedData = data.name.toLowerCase();\n        const dublicate = this.state.contacts.find(\n            contact => contact.name.toLowerCase() === normilizedData,\n        );\n\n        const newContact = {\n            ...data,\n            id: uuidv4(),\n        };\n\n        dublicate\n            ? alert(`${dublicate.name} is already in contacts`)\n            : this.setState(({ contacts }) => ({\n                  contacts: [newContact, ...contacts],\n              }));\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    deleteContact = contactId => {\n        // console.log('delete was clicked');\n        // console.log(contactId);\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                contact => contact.id !== contactId,\n            ),\n        }));\n    };\n\n    componentDidMount() {\n        const contactsStorage = localStorage.getItem('contacts');\n        const contactsStorageParsed = JSON.parse(contactsStorage);\n\n        if (contactsStorageParsed) {\n            this.setState({ contacts: contactsStorageParsed });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    render() {\n        const normalizedFilter = this.state.filter.toLowerCase();\n        const filteredContacts = this.state.contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n\n        return (\n            <div className=\"App\">\n                <h1 className=\"title\">Phonebook</h1>\n                <ContactForm onSubmit={this.addNewContact} />\n                <h2>Contacts</h2>\n                <Filter\n                    value={this.state.filter}\n                    onChange={this.changeFilter}\n                />\n                <ContactList\n                    contacts={filteredContacts}\n                    onDeleteContact={this.deleteContact}\n                />\n            </div>\n        );\n    }\n}\nApp.defaultProps = {\n    contacts: [],\n};\n\nApp.propTypes = {\n    contacts: PropTypes.array,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}